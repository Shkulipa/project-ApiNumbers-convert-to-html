{"version":3,"sources":["img/arrow.svg","img/numbers.svg","img/Ellipsis-1s-200px.svg","img/Infinity-1s-200px.svg","Components/Header/HeaderHtml.js","Components/Footer/Footer.js","Components/ApiReference/ApiReference.js","Components/Home/CategoryButtons/Category.js","Components/Spinners/SpinnerForTexts/SpinnerText.js","Components/Spinners/SpinnerForNumbers/SpinnerNumbers.js","Components/Home/Search/Search.js","Components/GerServices/GetServices.js","Components/Home/Home.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderHtml","className","to","src","logo","alt","Component","Footer","ApiReference","href","id","Category","onClickSearch","date","props","UpdateValue","onClick","SpinnerText","gif","SpinnerNumbers","Search","state","value","opportunityToChangeValueInputForCategories","valueChange","event","setState","target","onClickClear","RandomValue","ACTION","handleKeyPress","key","ChangeNumberOnDate","number","Arr","aNumber","text","split","MonthsWith31days","MonthsWith30days","MonthsWith29days","ArrDays","i","push","MonthWord","MonthNumber","indexOf","Day","onClickNumber","type","prevProps","prevState","snapshot","this","numbers","ReNumber","map","el","UniqueKey","onChange","maxLength","placeholder","onKeyPress","arrow","UniqKey","length","Math","floor","random","getServices","getResources","url","fragment","a","fetch","getData","ok","Error","status","json","ourDate","_transformNumber","data","convertedNumber","toString","NewArr","AddDateFromNumber","getArrMonthWithDates","found","ArrMonths","NewArrWithDate","Days","d","Home","makeRequest","randoms","trueOrFalse","then","catch","error","console","log","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e07365c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.6cc0294c.svg\";","module.exports = __webpack_public_path__ + \"static/media/numbers.2774b32d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Ellipsis-1s-200px.d1cc1024.svg\";","module.exports = __webpack_public_path__ + \"static/media/Infinity-1s-200px.ee045e04.svg\";","import React, {Component} from 'react';\nimport './Header.css';\nimport logo from '../../img/numbers.svg';\nimport {NavLink, Link} from \"react-router-dom\";\n\nexport default class HeaderHtml extends Component {\n\n    render() {\n        return (\n            <header>\n                <div className=\"container\">\n                    <div className=\"Header_content\">\n                        <Link className=\"Header_logo\" to={\"/Home\"}>\n                            <img src={logo} alt={\"\"}/>\n                            <div>Numbers</div>\n                        </Link>\n\n                        <div className=\"Header_nav\">\n                            <NavLink  to=\"/Home\">HOME</NavLink>\n                            <NavLink  to=\"/Api-reference\">API REFERENCE </NavLink>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        );\n    }\n}\n","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => {\n    return (\n        <footer>\n            <div className=\"container\">\n                <div className=\"Footer_content\">&copy; 2020</div>\n            </div>\n        </footer>\n\n    );\n}\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport './ApiReference.css';\nimport {HashRouter} from \"react-router-dom\";\nimport { HashLink as Link } from 'react-router-hash-link';\n\nexport default class ApiReference extends Component {\n\n    render() {\n        return (\n            <HashRouter>\n            <div className=\"Api\">\n                <div className=\"container\">\n                    <div className=\"Api_block\">\n                        <h1>API REFERENCE</h1>\n                        <p>\n                            Thanks to the site <a href=\"http://numbersapi.com\">http://numbersapi.com</a> for providing\n                            API\n                        </p>\n                        <p>\n                            And also thanks to <a href=\"https://rapidapi.com/divad12/api/numbers-1\">https://rapidapi.com/divad12/api/numbers-1</a> for https for the ability to download the project to Github\n                        </p>\n                    </div>\n\n                    <div className=\"Api_block\">\n                        <h1>URL STRUCTURE</h1>\n                        <p>\n                            Thanks to the site \"http://numbersapi.com\" for providing API\n                        </p>\n                        <p>\n                            Just hit <span><a href=\"http://numbersapi.com/\">http://numbersapi.com/</a><b>number/type</b></span> to\n                            get a plain text response, where\n                        </p>\n\n                        <div>\n                            <ul>\n                                <li><span className=\"bgColor fw700\">type</span> is one of <span\n                                    className=\"bgColor italic\">trivia</span>, <span\n                                    className=\"bgColor italic\">math</span>, <span className=\"bgColor italic\">date</span>,\n                                    or <span className=\"bgColor italic\">year</span>. Defaults to trivia if omitted.\n                                </li>\n                                <li><span className=\"bgColor fw700\">number</span> is</li>\n                                <ul>\n                                    <li>an integer, or</li>\n                                    <li>the keyword <span className=\"bgColor italic\">random</span>, for which we will\n                                        try to return a random available fact, or\n                                    </li>\n                                    <li>a day of year in the form <span\n                                        className=\"bgColor fw700\">month/day</span>(eg. <span\n                                        className=\"bgColor\">2/29</span>, <span className=\"bgColor\">1/09</span>, <span\n                                        className=\"bgColor\">04/1</span>), if type is date\n                                    </li>\n                                    <li><Link to=\"Api-reference#batching\">ranges of numbers</Link></li>\n                                </ul>\n                            </ul>\n                        </div>\n\n                        <div className=\"Api_elem\">\n                            <p>http://numbersapi.com/42<br/>\n                                ⇒ 42 is the result given by Google and Bing for the query \"the answer to life the\n                                universe and everything\".</p>\n\n                            <p>http://numbersapi.com/2/29/date<br/>\n                                ⇒ February 29 is the day in 1504 that Christopher Columbus uses his knowledge of a lunar\n                                eclipse to convince Native Americans to provide him with supplies.</p>\n\n                            <p>http://numbersapi.com/random/year<br/>\n                                ⇒ 2013 is the year that China will attempt its first unmanned Moon landing.</p>\n                        </div>\n                    </div>\n\n                    <div className=\"Api_block\">\n                        <h1>USAGE EXAMPLES</h1>\n                        <h3>JQUERY</h3>\n\n                        <h4>HTML:</h4>\n                        <div className=\"Api_elem\">\n                            <p> We now have more users than &lt;span id=\"number\"&gt;&lt;/span&gt;!</p>\n                        </div>\n\n                        <h4> JavaScript:</h4>\n                        <div className=\"Api_elem\">\n<pre><code>$.get('http://numbersapi.com/1337/trivia?notfound=floor&fragment', function(data) {\n    \"$('#number').text(data);\"\n});</code></pre>\n                        </div>\n\n                        <p>Direct cross-origin requests like this are possible on browsers that support <a\n                            href=\"https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\"> CORS</a>. Live demo\n                            on <a href=\"http://jsfiddle.net/divad12/ffHEh/\">JSFiddle</a>.</p>\n\n                        <h3 id=\"JSONP\">JSONP</h3>\n                        <p>...is supported with the query field<Link to=\"Api-reference#callback\"><span\n                            className=\"bgColor\">callback:</span></Link></p>\n\n                        <div className=\"Api_elem\">\n<pre><code>&lt;span id=\"number-fact\"&gt;&lt;/span&gt;\n\n    &lt;script&gt;\n    function showNumber(str) {\n        \"document.getElementById('number-fact').innerText = str;\"\n    }\n\n    (function() {\n        `var scriptTag = document.createElement('script');\n        scriptTag.async = true;\n        scriptTag.src = \"http://numbersapi.com/42/math?callback=showNumber\";\n        document.body.appendChild(scriptTag);`\n    })();\n    &lt;/script&gt;</code></pre>\n                        </div>\n\n                        <p>Live demo on <a href=\"http://jsfiddle.net/divad12/4A6Pw/\"><span\n                            className=\"bgColor\">JSFiddle</span>.</a></p>\n\n                        <h3 id=\"HTML-EMBED\">HTML EMBED</h3>\n                        <p>Add <span className=\"bgColor\">write</span> to your query string to have the response text\n                            wrapped in <span className=\"bgColor\">document.write().</span> Now you can stick just a\n                            single <span className=\"bgColor\">&lt;script&gt;</span> directly where the fact should go.\n                        </p>\n\n\n                        <div className=\"Api_elem\">\n                            <p>Did you know 2012 is the year that &lt;script\n                                src=\"http://numbersapi.com/2012/year?write&fragment\"&gt;&lt;/script&gt;</p>\n                        </div>\n\n                        <p>Note that this may <a href=\"https://developer.yahoo.com/performance/rules.html#js_bottom\">degrade\n                            page load speed</a>. Live demo on <a href=\"http://jsfiddle.net/divad12/4A6Pw/\">JSFiddle</a>.\n                        </p>\n                    </div>\n\n                    <div className=\"Api_block\">\n                        <h1>QUERY PARAMETER OPTIONS</h1>\n                        <h3>FRAGMENT</h3>\n                        <p>\n                            Return the fact as a sentence fragment that can be easily included as part of a larger\n                            sentence. This means that the first word is lowercase and ending punctuation is omitted. For\n                            trivia and math, a noun phrase is returned that can be used in a sentence like \"We now have\n                            more users than [fact as fragment]!\".\n                        </p>\n\n                        <div className=\"Api_elem\">\n                            <p>http://numbersapi.com/23/trivia?fragment<br/>\n                                ⇒ the number of times Julius Caesar was stabbed<br/>\n                                <br/>\n                                    http://numbersapi.com/1969/year?fragment<br/>\n                                    ⇒ an estimated 500 million people worldwide watch Neil Armstrong take his historic\n                                    first steps on the Moon</p>\n                        </div>\n\n                        <h3>NOTFOUND</h3>\n                        <p>The <span className=\"bgColor\">notfound</span> field tells us what to do if the number is not\n                            found. You can give us</p>\n                        <ul>\n                            <li>\n                                <p><span className=\"bgColor\">default</span> to return one of our pre-written missing\n                                    messages, or a message you supply with the <span className=\"bgColor\"><Link to=\"Api-reference#default\">default</Link></span> query field. This is the default behaviour.\n                                </p>\n                                <div className=\"Api_elem\">\n                                    <p>http://numbersapi.com/314159265358979<br/>\n                                        ⇒ 314159265358979 is a boring number.</p>\n                                </div>\n                            </li>\n\n                            <li>\n                                <p><span className=\"bgColor\">floor</span> to round down to the largest number that does\n                                    have an associated fact, and return that fact.</p>\n                                <div className=\"Api_elem\">\n                                    <p>http://numbersapi.com/35353?notfound=floor<br/>\n                                        ⇒ 35000 is the number of genes in a human being.</p>\n                                </div>\n                            </li>\n\n                            <li>\n                                <p><span className=\"bgColor\">ceil</span>, which is like <span\n                                    className=\"bgColor\">floor</span> but rounds up to the smallest number that has an a\n                                </p>\n                                <div className=\"Api_elem\">\n                                    <p>http://numbersapi.com/35353?notfound=floor<br/>\n                                        ⇒ 35000 is the number of genes in a human being.</p>\n                                </div>\n                            </li>\n                        </ul>\n\n                        <p>Combine with the <Link to=\"Api-reference#fragment\">fragment</Link> option to produce interesting facts about,\n                            for example, <Link to=\"Api-reference#visitors\">the number of page shares</Link>.</p>\n\n                        <h3 id=\"default\">DEFAULT</h3>\n                        <p>The value of the `default` query field tells us what to return if we don't have a fact for\n                            the requested number.</p>\n\n                        <div className=\"Api_elem\">\n                            <p>http://numbersapi.com/1234567890987654321/year?default=Boring+number+is+boring.<br/>\n                                ⇒ Boring number is boring.</p>\n                        </div>\n\n                        <h3 id=\"callback\">CALLBACK</h3>\n                        <p>To use [JSONP](http://en.wikipedia.org/wiki/JSONP), pass to the `callback` query the name of\n                            the JavaScript function to be invoked. The response will be that function called on the fact\n                            text as a string literal.</p>\n                        <div className=\"Api_elem\">\n                            <p>http://numbersapi.com/42/math?callback=showNumber<br/>\n                                ⇒ showNumber(\"42 is the 5th Catalan number.\")</p>\n                        </div>\n                        <p>See the <Link to=\"Api-reference#JSONP\">JSONP usage example</Link>.</p>\n\n\n                        <h3 id=\"callback\">WRITE</h3>\n                        <p>Returns the text response wrapped in a call to\n                            [`document.write()`](https://developer.mozilla.org/en/document.write). Note that using this\n                            query parameter is equivalent to and just a shorthand of `?callback=document.write`.</p>\n                        <div className=\"Api_elem\">\n                            <p>http://numbersapi.com/42/math?write<br/>\n                                ⇒ document.write(\"42 is the 5th Catalan number.\");</p>\n                        </div>\n                        <p>See the <Link to=\"Api-reference#HTML-EMBED\">HTML embed tag usage example</Link>.</p>\n\n\n                        <h3 id=\"callback\">MIN AND MAX</h3>\n                        <p>Restrict the range of values returned to the inclusive range [<span\n                            className=\"bgColor fw700\">min</span>, <span className=\"bgColor fw700\">max</span>] when <span\n                            className=\"bgColor fw700\">random</span> is given as the number.</p>\n                        <div className=\"Api_elem\">\n                            <p>http://numbersapi.com/random?min=10&max=20<br/>\n                                13 is the number of provinces and territories in Canada.</p>\n                        </div>\n\n\n                        <h3 id=\"JSON\">JSON</h3>\n                        <p>Include the query parameter `json` or set the HTTP header `Content-Type` to\n                            `application/json` to return the fact and associated meta-data as a JSON object, with the\n                            properties:</p>\n                        <ul>\n                            <li>\n                                <span className=\"bgColor\">text</span>: A string of the fact text itself.\n                            </li>\n                            <li>\n                                <span className=\"bgColor\">found</span>: Boolean of whether there was a fact for the\n                                requested number.\n                            </li>\n                            <li>\n                                <span className=\"bgColor\">number</span>: The floating-point number that the fact\n                                pertains to. This may be useful for, eg. a <span\n                                className=\"bgColor\">/random</span> request or <span className=\"bgColor\">notfound=floor\n                            </span>\n                            . For a date fact, this is the 1-indexed day of a leap year (eg. 61 would be March 1st).\n                        </li>\n                        <li>\n                            <span className=\"bgColor\">type</span>: String of the category of the returned fact.\n                        </li>\n                        <li>\n                            <span className=\"bgColor\">date</span> (sometimes): A day of year associated with some year\n                            facts, as a string.\n                        </li>\n                        <li>\n                            <span className=\"bgColor\">year</span> (sometimes): A year associated with some date facts,\n                            as a string.\n                        </li>\n                    </ul>\n                    <div className=\"Api_elem\">\n<pre><code>http://numbersapi.com/random/year?json\n   ⇒ {\n        \"text: 2012 is the year that the century's second and last solar transit of Venus occurs on June 6.,\" +\n        \"found: true,\" +\n        \"number: 2012,\" +\n        \"type: year,\" +\n        \"date: June 6\"\n    }</code></pre>\n</div>\n\n</div>\n\n\n    <div className=\"Api_block\">\n        <h1 id={'batching'}>BATCH REQUESTS</h1>\n        <p>\n            To get facts about multiple <span className=\"bgColor fw700\">numbers</span> in one request, specify ranges\n            for number in:<br/>\n        </p>\n        <p>\n            <span className=\"bgColor\">\n                <a href=\"http://numbersapi.com\">http://numbersapi.com</a>\n            </span>\n            <span className=\"fw700\">/number/type</span>.\n        </p>\n\n        <p>A number range (inclusive) is specified as <span className=\"bgColor fw700\">min..max</span>. Separate multiple\n            ranges and individual numbers with <span className=\"bgColor fw700\">,</span> (a comma).</p>\n\n        <p>The response format will always be a JSON map from numbers to facts, of at most 100 numbers. The query\n            parameter <span className=\"bgColor\"><Link to=\"Api-reference#JSON\">json</Link></span> may still be used to specify whether\n            individual facts will be returned as string literals or JSON objects.</p>\n\n        <div className=\"Api_elem\">\n<pre><code>http://numbersapi.com/1..3,10  <br/> +\n⇒ {<br/> +\n        \"1: 1 is the number of dimensions of a line.,\" + <br/> +\n        \"2: 2 is the number of polynucleotide strands in a DNA double helix.,\" +  <br/> +\n        \"3: 3 is the number of sets needed to be won to win the whole match in volleyball.,\" +  <br/> +\n        \"10 is the highest score possible in Olympics gymnastics competitions.\"\n    }</code></pre>\n</div>\n</div>\n\n</div>\n    </div>\n            </HashRouter>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport './Category.css';\n\nexport default class Category extends Component {\n\n    onClickSearch = (date) => {\n        this.props.UpdateValue(date);\n    }\n\n    render() {\n        return (\n            <section className=\"category\">\n                <button onClick={() => this.onClickSearch('5/math')}\n                        className=\"category_elem\">\n                    <h1>Math</h1>\n                    <div className=\"category_elem_describe\">\n                        <div className=\"title\">5/math</div>\n                        <div className=\"describe\">\n                            5 is the number of platonic solids.\n                        </div>\n                    </div>\n                </button>\n\n                <button\n                        onClick={() => this.onClickSearch('42/trivia')}\n                        className=\"category_elem\">\n                    <h1>Trivia</h1>\n                    <div className=\"category_elem_describe\">\n                        <div className=\"title\">42/trivia</div>\n                        <div className=\"describe\">\n                            42 is the number of little squares forming the left side trail\n                            of Microsoft's Windows 98 logo.\n                        </div>\n                    </div>\n                </button>\n\n                <button onClick={() => this.onClickSearch('7/6/date')}\n                        className=\"category_elem\">\n                    <h1>Date</h1>\n                    <div className=\"category_elem_describe\">\n                        <div className=\"title\">7/6/date</div>\n                        <div className=\"describe\">\n                            July 3rd is the day in 2006 that Valencia metro accident leaves\n                            43 dead in Valencia, Spain.\n                        </div>\n                    </div>\n                </button>\n            </section>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport './SpinnerText.css';\nimport gif from './../../../img/Ellipsis-1s-200px.svg'\n\nexport default class SpinnerText extends Component {\n    render() {\n        return (\n            <div className={\"SpinnerText\"}>\n                <img src={gif} alt=\"\"/>\n            </div>\n\n        );\n    }\n}\n\n\n","import React, {Component} from 'react';\nimport './SpinnerNumbers.css';\nimport gif from './../../../img/Infinity-1s-200px.svg'\n\nexport default class SpinnerNumbers extends Component {\n    render() {\n        return (\n            <div className={\"SpinnerNumbers\"}>\n                <img src={gif} alt=\"\"/>\n            </div>\n\n        );\n    }\n}\n\n\n","import React, {Component} from 'react';\nimport './Search.css';\nimport arrow from './../../../img/arrow.svg';\nimport SpinnerText from \"../../Spinners/SpinnerForTexts/SpinnerText\";\nimport SpinnerNumbers from \"../../Spinners/SpinnerForNumbers/SpinnerNumbers\";\n\n\nexport default class Search extends Component {\n\n    state = {\n        value: '',\n\n        opportunityToChangeValueInputForCategories: true\n    }\n\n    valueChange = (event) => {\n        this.setState({\n            opportunityToChangeValueInputForCategories: false,\n            value: event.target.value\n        })\n    }\n\n\n    onClickSearch = () => {\n        this.setState({\n            opportunityToChangeValueInputForCategories: true,\n        })\n\n        this.props.UpdateValue(this.state.value, true);\n    }\n\n    onClickClear = () => {\n        this.setState({\n            opportunityToChangeValueInputForCategories: true,\n        })\n\n        this.props.UpdateValue('');\n    }\n\n\n    RandomValue = (ACTION) => {\n        if (ACTION === 'MATH') {\n            return this.props.UpdateValue('random/math', true);\n        } else if (ACTION === 'TRIVIA') {\n            return this.props.UpdateValue('random/trivia', true);\n        } else if (ACTION === 'DATE') {\n            return this.props.UpdateValue('random/date', true);\n        } else if (ACTION === 'YEAR') {\n            return this.props.UpdateValue('random/year', true);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if ( prevProps.state.value !== this.state.value && this.state.opportunityToChangeValueInputForCategories === true) {\n                this.setState({\n                    value: prevProps.state.value\n                })\n            }\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            this.onClickSearch();\n        }\n        // console.log(event.key);\n        // console.log(event.charCode);\n    }\n\n    ChangeNumberOnDate = (number) => {\n        const Arr = this.props.state.aNumber.text.split(' ');\n\n        const ArrMonths = [null, 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n        const MonthsWith31days = ['January', 'March', 'May', 'July', 'August', 'October', 'December'];\n        const MonthsWith30days = ['April', 'June', 'September', 'November'];\n        const MonthsWith29days =['February'];\n\n        let ArrDays = [];\n        for (let i = 0; i <= 31; i++) {\n            if( i === 1 || i === 21 || i === 31){\n                ArrDays.push(`${i}st`);\n            } else if( i === 2 || i === 22) {\n                ArrDays.push(`${i}nd`);\n            } else if ( i === 3 || i === 23 ) {\n                ArrDays.push(`${i}rd`);\n            } else {\n                ArrDays.push(`${i}th`);\n            }\n        }\n\n        let MonthWord = Arr[0];\n        let MonthNumber = ArrMonths.indexOf( Arr[0] );\n        let Day = ArrDays.indexOf(Arr[1]);\n\n        /* Увеличиывем Дату на +1 */\n        if ( number >= 0 && MonthsWith31days.indexOf( MonthWord ) > -1 && MonthNumber !== 12 && Day === 31 ) { /* For up number */\n            return this.props.UpdateValue( `${MonthNumber + number}/1/date`);\n\n        } else if ( number >= 0 && MonthNumber === 12 && Day === 31 ) {\n            return this.props.UpdateValue( `1/1/date` );\n\n        } else if ( number >= 0 && MonthsWith30days.indexOf( MonthWord ) > -1 && Day === 30 ) {\n            return this.props.UpdateValue( `${MonthNumber + number}/1/date`);\n\n        } else if ( number >= 0 && MonthsWith29days.indexOf( MonthWord ) > -1 && Day === 29 ) {\n            return this.props.UpdateValue( `${MonthNumber + number}/1/date`);\n\n        } else if ( number < 0 && MonthsWith31days.indexOf( MonthWord ) > -1 && Day === 1  && MonthWord !== 'March' && MonthWord !== 'January') { /* For down number */\n            return this.props.UpdateValue( `${MonthNumber + number}/30/date`);\n\n        } else if ( number < 0 && MonthsWith30days.indexOf( MonthWord ) > -1 && Day === 1 ) {\n            return this.props.UpdateValue(`${MonthNumber + number}/31/date`);\n\n        } else if ( number < 0 && MonthsWith31days.indexOf( MonthWord ) > -1 && Day === 1 && MonthWord === 'March' ) {\n            return this.props.UpdateValue(`${MonthNumber + number}/29/date`);\n\n        } else if ( number < 0 && MonthsWith29days.indexOf( MonthWord ) > -1 && Day === 1 ) {\n            return this.props.UpdateValue(`${MonthNumber + number}/31/date`);\n\n        } else if ( number < 0 && MonthsWith31days.indexOf( MonthWord ) > -1 && Day === 1 && MonthWord === 'January') {\n            return this.props.UpdateValue(`12/31/date`);\n\n        }else if ( number > 0 || number < 0) {\n            return this.props.UpdateValue(`${MonthNumber}/${Day + number}/date`);\n        }\n    }\n\n\n    onClickNumber = (ACTION) => {\n        if (ACTION === 'UP') {\n            if( this.props.state.aNumber.type !== '/date' && this.props.state.aNumber.type !== 'Undefined') {\n                return this.props.UpdateValue(`${++this.props.state.aNumber.number}${this.props.state.aNumber.type}`)\n            } else if ( this.props.state.aNumber.type === '/date' ) {\n                return this.ChangeNumberOnDate( 1 );\n            } else if ( this.props.state.aNumber.type === 'Undefined' ) {\n                return this.props.UpdateValue('Undefined');\n            }\n        } else if ( ACTION === 'DOWN' ) {\n            if( this.props.state.aNumber.type !== '/date' && this.props.state.aNumber.type !== 'Undefined' ) {\n                return this.props.UpdateValue(`${--this.props.state.aNumber.number}${this.props.state.aNumber.type}`)\n            } else if ( this.props.state.aNumber.type === '/date' ) {\n                return this.ChangeNumberOnDate( -1 );\n            } else if ( this.props.state.aNumber.type === 'Undefined' ) {\n                return this.props.UpdateValue('Undefined');\n            }\n        }\n    }\n\n    render() {\n        const text = this.props.state.aNumber === null ? <SpinnerText /> : this.props.state.aNumber.text;\n        const numbers = this.props.state.aNumber === null ? <SpinnerNumbers />  : this.props.state.aNumber.ReNumber.map(el =>\n            <span key={UniqueKey()}>{el}</span>);\n\n        return (\n            <section className=\"search\" >\n                <div  className=\"search_panel\">\n                    <div className=\"search_panel_title\">This-website.www/</div>\n\n                    <input value={this.state.value}\n                           onChange={(event) => this.valueChange(event)}\n                           type=\"text\"\n                           maxLength=\"30\"\n                           placeholder=\"Try it out... number/type\"\n                           onKeyPress={this.handleKeyPress}/>\n\n                    <button\n                        id={\"Search\"}\n                        onClick={() => this.onClickSearch()}>Search</button>\n                    <button\n                        id={\"Clear\"}\n                        onClick={() => this.onClickClear()}>Clear</button>\n                </div>\n\n                <div className=\"search_result\">\n                    <div className=\"search_calc\">\n\n                        <button  onClick={() => this.onClickNumber('UP')}\n                                 className=\"button_arrow-up\">\n                            <img src={arrow} alt=\"\"/></button>\n\n                        <div className=\"search_calc_numbers\">\n                            {numbers}\n                        </div>\n\n                        <button onClick={() => this.onClickNumber('DOWN')}\n                                className=\"button_arrow-down\">\n                            <img src={arrow} alt=\"\"/></button>\n\n                    </div>\n\n                    <div className=\"search_result_describe\">\n                        {text}\n                    </div>\n                </div>\n\n                <div className=\"search_result_Buttons\">\n                    <button onClick={ () => this.RandomValue('MATH') } className=\"Random_Button\">Random \"Math\"</button>\n                    <button onClick={ () => this.RandomValue('TRIVIA') } className=\"Random_Button\">Random \"Trivia\"</button>\n                    <button onClick={ () => this.RandomValue('DATE') } className=\"Random_Button\">Random \"Date\"</button>\n                    <button onClick={ () => this.RandomValue('YEAR') } className=\"Random_Button\">Random \"Year\"</button>\n                </div>\n            </section>\n        );\n    }\n}\n\n\nconst UniqueKey = () => {\n    const Arr = [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", \"a\", \"s\", \"d\", \"f\", \"g\", \"h\",\n        \"j\", \"k\", \"l\", \"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"p\", \"a\", \"s\", \"d\", \"f\", \"g\",\n        \"h\", \"j\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"];\n\n    let UniqKey = '';\n\n    for (let i = 0; i < Arr.length; i++) {\n        UniqKey = UniqKey + Math.floor(Math.random() * Arr.length);\n    }\n\n    return UniqKey;\n}","import {Component} from 'react';\r\n\r\nexport default class getServices extends Component {\r\n    getResources = async (url, fragment) => {\r\n        let getData = await fetch(`https://numbersapi.p.rapidapi.com/${url}?${fragment}`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"numbersapi.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"1340330ecbmsh678efbe6baabecep150962jsn173f29d7a896\"\r\n            }\r\n        });\r\n\r\n        if (!getData.ok) {\r\n            throw new Error (`You have problem with your \\`https://numbersapi.p.rapidapi.com/${url}?${fragment}\\`, status: ${getData.status}`);\r\n        }\r\n\r\n        return  getData.json();\r\n    }\r\n\r\n    getData = async (id, fragment) => {\r\n        const ourDate = await this.getResources(`${id}`, `${fragment}`);\r\n        return this._transformNumber(ourDate);\r\n    }\r\n\r\n    _transformNumber(data) {\r\n        const convertedNumber = data.number.toString();\r\n        let NewArr = [];\r\n        for (let i = 0; i < convertedNumber.length; i++) {\r\n            NewArr.push(convertedNumber[i]);\r\n        }\r\n\r\n\r\n\r\n        let AddDateFromNumber = '';\r\n        if(data.type === 'date') {\r\n            const dates = getArrMonthWithDates();\r\n            AddDateFromNumber = dates[data.number];\r\n        }\r\n\r\n        return {\r\n            found: data.found,\r\n            ReNumber: NewArr,\r\n            number: data.number,\r\n            type: '/' + data.type,\r\n            text: AddDateFromNumber + data.text\r\n        };\r\n    }\r\n}\r\n\r\n\r\nconst getArrMonthWithDates = () => {\r\n    const ArrMonths = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n    ];\r\n    const MonthsWith31days = [\r\n        \"January\",\r\n        \"March\",\r\n        \"May\",\r\n        \"July\",\r\n        \"August\",\r\n        \"October\",\r\n        \"December\",\r\n    ];\r\n    const MonthsWith30days = [\"April\", \"June\", \"September\", \"November\"];\r\n    const MonthsWith29days = [\"February\"];\r\n\r\n\r\n    let NewArrWithDate = ['0'];\r\n    for (let i = 0; i < ArrMonths.length; i++){\r\n        let Days;\r\n\r\n        if ( MonthsWith31days.indexOf(ArrMonths[i]) > -1 ) {\r\n            Days = 31;\r\n        } else if ( MonthsWith30days.indexOf(ArrMonths[i]) > -1 ) {\r\n            Days = 30;\r\n        } else if ( MonthsWith29days.indexOf(ArrMonths[i]) > -1 ) {\r\n            Days = 29;\r\n        }\r\n\r\n        for ( let d = 1; d <= Days; d++ )\r\n            if( d === 1 || d === 21 || d === 31 ) {\r\n                NewArrWithDate.push( `${ArrMonths[i]} ${d}st ` );\r\n            } else if ( d === 2 || d === 22 ) {\r\n                NewArrWithDate.push( `${ArrMonths[i]} ${d}nd ` );\r\n            } else if ( d === 3 || d === 23 ) {\r\n                NewArrWithDate.push( `${ArrMonths[i]} ${d}rd ` );\r\n            } else {\r\n                NewArrWithDate.push( `${ArrMonths[i]} ${d}th ` );\r\n            }\r\n    }\r\n    return NewArrWithDate;\r\n}","import React, {Component} from 'react';\nimport './Home.css';\nimport Category from \"./CategoryButtons/Category\";\nimport Search from \"./Search/Search\";\nimport getServices from \"../GerServices/GetServices\";\n\n/*  Объяснения */\n/*\n    this.state.randoms.indexOf(this.state.value) === -1   Означает что если this.state.value != ни одному элемунту из массива this.state.randoms\n    this.state.randoms.indexOf(this.state.value) > 1   Означает что this.state.value = одному элемунту из массива this.state.randoms\n\n    makeRequestRandom  При запросе Random(math/trivia и так далее) значения, будет смотреть разрешение true или false\n\n    randoms[0] в randoms: ['', 'random/math', 'random/trivia', 'random/date', 'random/year'] Для того что бы при нажатии на Clear невыполнялось 1е условие(запрос на новое значение)\n */\n\nexport default class Home extends Component {\n    getServices = new getServices();\n\n    state = {\n        /* dataBase about Number */\n        aNumber: null,\n\n        /*Value form search panel*/\n        value: '',\n        makeRequest: false,\n\n        randoms: ['', 'random/math', 'random/trivia', 'random/date', 'random/year']\n    }\n\n    UpdateValue = (data, trueOrFalse = false) => {\n        this.setState({\n            makeRequest: trueOrFalse,\n            value: data,\n        })\n    }\n\n    componentDidMount() {\n        this.getServices.getData('0/trivia', 'fragment=true&notfound=floor&json=true' )\n            .then(data => {\n                this.setState({\n                    aNumber: data\n                })\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        /* For get number from search panel */\n        if( prevState.value !== this.state.value && this.state.randoms.indexOf(this.state.value) === -1 && this.state.value !== 'Undefined') {\n            return this.getServices.getData(this.state.value, 'fragment=true&json=true')\n                    .then( data => {\n                        this.setState( {\n                            aNumber: data,\n                        } )\n                    } )\n                    .catch(error => {\n                        console.log(error);\n                        this.setState({\n                            value: 'Undefined',\n                            error: false,\n                            aNumber:\n                                {found: 'Undefined',\n                                ReNumber: 'Undefined'.split(''),\n                                number: null,\n                                type: 'Undefined',\n                                text: 'Please, enter correct value or try again'}\n                        })\n                    });\n\n        } else if( ( this.state.randoms.indexOf(this.state.value) > -1 ) && this.state.makeRequest === true ) {\n            return this.getServices.getData(this.state.value, 'max=9999&fragment=true&min=0&json=true')\n                .then( data => {\n                    this.setState( {\n                        aNumber: data,\n                        makeRequest: false\n                    } )\n                } )\n                .catch(error => {\n                    console.log(error);\n                    this.setState({\n                        value: 'Undefined',\n                        error: false,\n                        aNumber:\n                            {found: 'Undefined',\n                                ReNumber: 'Undefined'.split(''),\n                                number: null,\n                                type: 'Undefined',\n                                text: 'Please, enter correct value or try again'}\n                    })\n                });\n        } else if ( prevState.value !== this.state.value && this.state.value === '' ) {\n            return this.setState({\n                value: ''\n            })\n        } else if ( this.state.value === 'Undefined' && this.state.error === false ) {\n            return this.setState({\n                value: 'Undefined',\n                error: true,\n                aNumber:\n                    {found: 'Undefined',\n                        ReNumber: 'Undefined'.split(''),\n                        number: null,\n                        type: 'Undefined',\n                        text: 'Please, enter correct value or try again'}\n            })\n        } else if ( this.state.value === '' && this.state.error === false ) {\n            return this.setState({\n                value: 'Undefined',\n                error: true,\n                aNumber:\n                    {found: 'Undefined',\n                        ReNumber: 'Undefined'.split(''),\n                        number: null,\n                        type: 'Undefined',\n                        text: 'Please, enter correct value or try again'}\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"Home\">\n                <div className={\"container\"}>\n                    <Category UpdateValue={this.UpdateValue}/>\n                    <Search\n                        state={this.state}\n                        UpdateValue={this.UpdateValue}/>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport {HashRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport HeaderHtml from \"../Header/HeaderHtml\";\nimport Footer from \"../Footer/Footer\";\nimport ApiReference from \"../ApiReference/ApiReference\";\nimport Home from \"../Home/Home\";\n\n\nexport default class App extends Component {\n    render() {\n        return (\n            <HashRouter>\n                <HeaderHtml/>\n\n                <Route path='/Home' component={Home}/>\n                <Route path='/Api-reference' component={ApiReference}/>\n\n                <Switch>\n                    <Route path='/comp'/>\n                    <Redirect to={'/Home'}/>\n                </Switch>\n\n                <Footer/>\n            </HashRouter>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}